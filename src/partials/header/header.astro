---

import './style.scss';

import { Image } from 'astro:assets';
import logoLight from '@/assets/images/svg/valente-logo-white.svg';
import logoDark from '@/assets/images/svg/valente-logo-black.svg';
import headset from '@/assets/images/svg/headset_mic.svg';
import dash from '@/assets/images/svg/dash-green.svg';

const menuLeftSubsections = [
  {
    title: 'Trasporto merci',
    subpages: [
      {
        title: 'Trasporti a carico completo',
        url: '/servizio'
      },
      {
        title: 'Distribuzione pallettizzata',
        url: '/servizi-categoria'
      },
      {
        title: 'Trasporti espressi',
        url: '#'
      },
    ] 
  },
  {
    title: 'Autogru',
    subpages: [
      {
        title: 'Noleggio autogru',
        url: '#'
      },
      {
        title: 'Pattini a rotolamento',
        url: '#'
      },
    ] 
  },
  {
    title: 'Logistica e deposito',
    subpages: [
      {
        title: 'Logistica e deposito',
        url: '#'
      },
    ] 
  },
];

const menuRightSubsections = [
  {
    title: 'Sostenibilità',
    subpages: [
      {
        title: 'Report di sostenibilità',
        url: '#'
      },
      {
        title: 'Certificazioni',
        url: '#'
      },
    ] 
  },
  {
    title: 'Azienda',
    subpages: [
      {
        title: 'Chi siamo',
        url: '#'
      },
      {
        title: 'Codice etico',
        url: '#'
      },
      {
        title: 'Governance',
        url: '/governance'
      },
    ] 
  },
  {
    title: 'Esplora',
    subpages: [
      {
        title: 'News',
        url: '#'
      },
      {
        title: 'Lavora con noi',
        url: '/lavora-con-noi'
      },
      {
        title: 'Download',
        url: '/download'
      },
    ] 
  },
]

---

<header class="fixed w-full z-[999999] transition-all duration-300 lg:my-6 h-[60px] dark" id="main-header">
  <div class="flex justify-between items-center h-full">
    <a class="logo relative h-4 lg:h-10 w-[110px] lg:w-[140px] ml-5 lg:ml-12 mr-auto flex items-center" href="/">
      <Image src={logoDark} alt="logo" class='logo-dark absolute top-0 left-0 w-full h-full'/>
      <Image src={logoLight} alt="logo" class='logo-light absolute top-0 left-0 w-full h-full'/>
    </a>
    <div class="navigation h-full flex gap-x-[55px] lg:gap-x-[70px]">
      <a href="/" class="button relative section-red bg-red text-white font-button h-full px-3 lg:px-5 flex items-center uppercase">
        <p class="hidden lg:block tracking-widest text-white">Richiedi un preventivo</p>
        <Image src={headset} alt="logo" class='h-5 w-5 lg:hidden'/>
      </a>
      <div class="flex relative section-menu items-center gap-x-14 text-white font-button h-full pr-5 pl-3 lg:pl-5 flex items-center lg:pr-12">
        <button id="menu-hamburger" class="menu-hamburger h-5 relative w-20">
          <div class="hamburger-line"></div>
          <div class="hamburger-line"></div>
          <div class="hamburger-line"></div>
        </button>
        <button class="lang-selector text-white hidden lg:block rounded-lg bg-grey-dark w-8 h-8">
          IT
        </button>
      </div>
    </div>
  </div>

  <!-- HEADER MENU -->
  <div id="header-menu" class="fixed top-0 right-0 h-full -z-10 overflow-hidden">
    <div class="header-menu-inner absolute top-0 right-0 bg-green-light w-screen h-full">
      <div class="max-lg:flex flex-col max-lg:px-5 md:max-h-[840px] grid-container w-full h-full max-lg:max-h-[calc(100%-200px)] overflow-auto max-lg:mt-[100px] lg:pt-[188px] pb-[90px]">
        
        <div class="menu-left col-start-4 col-span-4 flex flex-col max-lg:pb-11 gap-y-[56px]">
          {menuLeftSubsections.map((subsection) => (
            <div class="menu-left-subsection">
              <h2 class="text-white mb-4 lg:mb-6">{subsection.title}</h2>
              <div class="menu-subsection-subpages flex flex-col gap-y-2">
                {subsection.subpages.map((subpage) => (
                  <div class="subpage flex gap-x-2 items-center">
                    <Image src={dash} alt="dash" class='dash h-[10px] w-8'/>
                    <a href={subpage.url} class="p lg:h5 text-dark">{subpage.title}</a>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>

        <div class="menu-right col-start-9 col-span-4 flex flex-col max-lg:pt-11 gap-y-[96px]">
          {menuRightSubsections.map((subsection) => (
            <div class="menu-right-subsection">
              <h5 class="font-button uppercase button-text text-white mb-4 lg:mb-6">{subsection.title}</h2>
              <div class="menu-subsection-subpages flex flex-col gap-y-2">
                {subsection.subpages.map((subpage) => (
                  <div class="subpage flex gap-x-2 items-center">
                    <Image src={dash} alt="dash" class='dash h-[10px] w-8'/>
                    <a href={subpage.url} class="p text-dark">{subpage.title}</a>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
        
      </div>

      <div class="contact-us absolute bottom-0 left-0">
        <a href="/contatti" class="h4 inline-block lg:w-[216px] max-lg:pr-4 max-lg:pl-5 py-7 lg:py-16 bg-white text-dark text-center">
          <span class="lg:hidden">Contatti</span>
          <span class="max-lg:hidden">Contattaci</span>
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Funzione per attivare/disattivare il menu mobile
  function toggleMenu() {
    const mobileMenu = document.getElementById('header-menu');

    mobileMenu.classList.toggle('open');
  }

  // Aggiungi l'evento di click al pulsante del menu mobile
  document.getElementById('menu-hamburger').addEventListener('click', toggleMenu);
  
  // Gestisce lo scroll della navbar
  window.addEventListener('scroll', function() {
    const header = document.getElementById('main-header');

    if (window.scrollY > 10) {
      
    } else {

    }
  });

  // Take care of switching header color
  const header = document.getElementById('main-header');
  const sections = document.querySelectorAll('.header-light, .header-dark');

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          if (entry.target.classList.contains('header-dark')) {
            header.classList.remove('light');
            header.classList.add('dark');
          } else {
            header.classList.remove('dark');
            header.classList.add('light');
          }
        }
      });
    },
    {
      threshold: 0.6,
    }
  );

  sections.forEach((section) => observer.observe(section));
</script>
